<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">
	<!-- 위 상단 파일 교체 -->

	<!-- annotation 설정을 하겠다. -->
	<context:annotation-config />

	<!-- com.javaex.controller 패키지 밑에 있는 클래스 중에 @Controller를 달고 있는 클래스의 객체를 
		생성 하겠다. (new 하겠다) -->
	<context:component-scan
		base-package="com.josh.controller" />

	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />
	<mvc:annotation-driven />

	<!-- 기본 뷰 리졸버 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- 멀티파트 리졸버 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />

		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<property name="maxInMemorySize" value="52428800" />

		<!-- defaultEncoding -->
		<property name="defaultEncoding" value="utf-8" />

	</bean>

	<!-- url매핑 -->
	<!-- 실제로는 upload라는 경로가 없으므로 해당 경로로 요청이 들어오면 서버의 location을 매핑시켜주어 요청을 수행할 
		수 있게 한다. -->
	<mvc:resources mapping="/upload/**"
		location="file:/var/webapps/upload/" />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>

		<!-- argument resolver -->
		<mvc:argument-resolvers>
			<bean
				class="com.josh.interceptor.AuthUserHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>

	</mvc:annotation-driven>

	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 주소가 board로 시작하면 interceptor를 작동시켜라 -->
			<!-- *개수는 url의 depth를 의미 -->
			<mvc:mapping path="/user/login" />
			<bean class="com.josh.interceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 주소가 board로 시작하면 interceptor를 작동시켜라 -->
			<!-- *개수는 url의 depth를 의미 -->
			<mvc:mapping path="/user/logout" />
			<bean class="com.josh.interceptor.LogoutInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<!-- mapping은 관리할 수 있는거 -->
			<mvc:mapping path="/**" />
			<!-- exclude mapping은 해당 인터셉터로 관리하지 않을 것,asset은 항상 써야하고, login/logout은 
				이미 전용 인터셉터가 잇으므로 -->
			<mvc:exclude-mapping path="/user/login" />
			<mvc:exclude-mapping path="/user/logout" />
			<mvc:exclude-mapping path="/assets/**" />
			<bean class="com.josh.interceptor.AuthInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


</beans>
